{"version":3,"file":"component---src-pages-resume-tsx-0815d5df8c5923a957ca.js","mappings":"6LAaMA,EAAAA,SAAAA,GAQL,WAAYC,GAAa,IAAD,SACvBC,EAAAA,EAAAA,KAAAA,KAAMD,IAAN,MARDE,MAAQ,SAOgB,EANxBC,MAA0B,CACzB,CACCC,KAAM,6EAA8EC,SAAU,SAM/FJ,EAAKK,MAAQ,CACZC,WAAY,GAAIC,aAAc,CAAE,YAAa,YAAa,UAHpC,GARnBT,EAAAA,EAAAA,GAAAA,EAAAA,GAaJ,kBAqCA,OArCA,EAEDU,YAAAA,WAAe,IAAD,OACTC,EAAM,GAyBV,OAxBAC,OAAOC,KAAKC,EAAAA,GAAaC,SAAQ,SAAAC,GAChC,IAAIC,EAAWH,EAAAA,EAAYE,GAAZF,SACXG,GACHA,EAASF,SAAQ,SAAAG,GAChB,IAAIC,EAAQD,EAAC,MACTC,GACHA,EAAMJ,SAAQ,SAAAK,GACb,IAAIC,EAAQD,EAAC,MACTC,GACHT,OAAOC,KAAKQ,GAAON,SAAQ,SAAAO,GACtBC,EAAKhB,MAAME,aAAae,SAASF,KAC/BX,EAAIW,KAAKX,EAAIW,GAAM,IACxBD,EAAMC,GAAIP,SAAQ,SAAAU,GACZd,EAAIW,GAAIG,KAAId,EAAIW,GAAIG,GAAK,GAC9Bd,EAAIW,GAAIG,qBAUVd,GAAP,EAGDe,kBAAAA,WACC,IAAIf,EAAMgB,KAAKjB,cACfiB,KAAKC,SAAS,CAAE,WAAcjB,KAA9B,EAGDkB,OAAAA,WAAU,IAAD,OACR,OAAOC,EAAAA,cAACC,EAAAA,EAAD,CAAS5B,MAAOwB,KAAKxB,MAAOC,MAAOuB,KAAKvB,OAC7CuB,KAAKpB,MAAMC,YAAcmB,KAAKpB,MAAME,aAAauB,KAAI,SAACC,GACtD,IAAMC,EAAYC,EAAK5B,MAAMC,WAAWyB,GACxC,GAAIC,EAAW,CACd,IAAI/B,EAAQ,QACD,cAAP8B,IAAoB9B,EAAQ,yBACrB,cAAP8B,IAAoB9B,EAAQ,0BACrB,UAAP8B,IAAgB9B,EAAQ,SAE5B,IAAIiC,EAAoD,GACxDxB,OAAOyB,QAAQH,GAAWnB,SAAQ,YAAsB,IAAnBuB,EAAkB,KAAZC,EAAY,KACtDH,EAAeI,KAAK,CACnBF,KAAAA,EAAMC,MAAAA,OAGRH,EAAeK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEJ,MAAQG,EAAEH,SAE1C,IAAIK,EAAwB,GAK5B,OAJAR,EAAerB,SAAQ,SAAA8B,GACtBD,EAAYJ,KAAQK,EAAGP,KAAvB,KAAgCO,EAAGN,MAAnC,QAGMT,EAAAA,cAACgB,EAAAA,EAAD,CAAoBC,UAAW,CAAE5C,MAAOA,GAAS6C,IAAKf,GAC5DH,EAAAA,cAACmB,EAAAA,EAAD,CAAc5C,KAAMuC,EAAaM,eAAe,kBAvBpD,EAlDIlD,CAAe8B,EAAAA,WAiFrB,O,wEC5EA,UARe,WACd,IAAMqB,GAAWC,EAAAA,EAAAA,GAAQ,UAEzB,OAAOtB,EAAAA,cAACuB,EAAAA,EAAD,CAAMC,UAAWH,GACvBrB,EAAAA,cAAC9B,EAAAA,EAAD","sources":["webpack://personal-portfolio/./src/components/Skills.tsx","webpack://personal-portfolio/./src/pages/resume.tsx"],"sourcesContent":["/*\nAuthor: Andrei Cozma\nWebsite: https://andreicozma.com\nGithub Repository: https://github.com/andreicozma1/andreicozma1.github.io\n*/\nimport React from \"react\"\nimport { pagesConfig } from \"../config/PagesConfig\"\nimport { NoteProps } from \"./props/UIComponentsProps\"\nimport Section from \"./layout/Section\"\nimport DataCardResponsive from \"./cards/DataCardResponsive\"\nimport SmartChipBox from \"./chips/SmartChipBox\"\n\n// Use PageSectionProps to get the title, notes, and items\nclass Skills extends React.Component<any, any> {\n\ttitle = \"Skills\"\n\tnotes: Array<NoteProps> = [\n\t\t{\n\t\t\ttext: \"An overview of my skillset based on the contents listed in this portfolio.\", severity: \"info\"\n\t\t}\n\t]\n\n\tconstructor(props: any) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tskillsList: {}, displayOrder: [ \"languages\", \"libraries\", \"tools\" ]\n\t\t}\n\t}\n\n\tcountSkills() {\n\t\tlet skl = {}\n\t\tObject.keys(pagesConfig).forEach(pk => {\n\t\t\tlet sections = pagesConfig[pk][\"sections\"]\n\t\t\tif (sections) {\n\t\t\t\tsections.forEach(s => {\n\t\t\t\t\tlet items = s[\"items\"]\n\t\t\t\t\tif (items) {\n\t\t\t\t\t\titems.forEach(i => {\n\t\t\t\t\t\t\tlet chips = i[\"chips\"]\n\t\t\t\t\t\t\tif (chips) {\n\t\t\t\t\t\t\t\tObject.keys(chips).forEach(ck => {\n\t\t\t\t\t\t\t\t\tif (this.state.displayOrder.includes(ck)) {\n\t\t\t\t\t\t\t\t\t\tif (!skl[ck]) skl[ck] = {}\n\t\t\t\t\t\t\t\t\t\tchips[ck].forEach(c => {\n\t\t\t\t\t\t\t\t\t\t\tif (!skl[ck][c]) skl[ck][c] = 0\n\t\t\t\t\t\t\t\t\t\t\tskl[ck][c]++\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\treturn skl\n\t}\n\n\tcomponentDidMount() {\n\t\tlet skl = this.countSkills()\n\t\tthis.setState({ \"skillsList\": skl })\n\t}\n\n\trender() {\n\t\treturn <Section title={this.title} notes={this.notes}>\n\t\t\t{this.state.skillsList && this.state.displayOrder.map((sk: React.Key) => {\n\t\t\t\tconst skillList = this.state.skillsList[sk]\n\t\t\t\tif (skillList) {\n\t\t\t\t\tlet title = \"Other\"\n\t\t\t\t\tif (sk === \"languages\") title = \"Programming Languages\"\n\t\t\t\t\tif (sk === \"libraries\") title = \"Libraries & Frameworks\"\n\t\t\t\t\tif (sk === \"tools\") title = \"Other\"\n\n\t\t\t\t\tlet skillCountsMap: { name: string; count: number }[] = []\n\t\t\t\t\tObject.entries(skillList).forEach(([ name, count ]) => {\n\t\t\t\t\t\tskillCountsMap.push({\n\t\t\t\t\t\t\tname, count\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\tskillCountsMap.sort((a, b) => b.count - a.count)\n\n\t\t\t\t\tlet skillCounts: string[] = []\n\t\t\t\t\tskillCountsMap.forEach(sc => {\n\t\t\t\t\t\tskillCounts.push(`${sc.name} (${sc.count})`)\n\t\t\t\t\t})\n\n\t\t\t\t\treturn <DataCardResponsive itemProps={{ title: title }} key={sk}>\n\t\t\t\t\t\t<SmartChipBox text={skillCounts} defaultVariant=\"filled\"/>\n\t\t\t\t\t</DataCardResponsive>\n\t\t\t\t}\n\t\t\t})}\n\t\t</Section>\n\t}\n}\n\nexport default Skills","/*\nAuthor: Andrei Cozma\nWebsite: https://andreicozma.com\nGithub Repository: https://github.com/andreicozma1/andreicozma1.github.io\n*/\nimport * as React from \"react\"\nimport Page from \"../components/layout/Page\"\nimport { usePage } from \"../config/PagesConfig\"\nimport Skills from \"../components/Skills\"\n\nconst Resume = () => {\n\tconst pageData = usePage(\"Resume\")\n\n\treturn <Page pageProps={pageData}>\n\t\t<Skills/>\n\t</Page>\n}\n\nexport default Resume\n"],"names":["Skills","props","_this","title","notes","text","severity","state","skillsList","displayOrder","countSkills","skl","Object","keys","pagesConfig","forEach","pk","sections","s","items","i","chips","ck","_this2","includes","c","componentDidMount","this","setState","render","React","Section","map","sk","skillList","_this3","skillCountsMap","entries","name","count","push","sort","a","b","skillCounts","sc","DataCardResponsive","itemProps","key","SmartChipBox","defaultVariant","pageData","usePage","Page","pageProps"],"sourceRoot":""}